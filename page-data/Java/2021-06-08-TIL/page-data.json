{"componentChunkName":"component---src-templates-blog-post-js","path":"/Java/2021-06-08-TIL/","result":{"data":{"site":{"siteMetadata":{"title":"여름산책","author":"이주형","siteUrl":"https://juhyung990122.github.io","comment":{"disqusShortName":"Guinness990122","utterances":"Juhyung990122/Juhyung990122"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"f9a7db6a-c604-524f-b447-7c4322ce97cf","excerpt":"🌟 JAVA Enum 🎯 Enum class이란? Enum 타입은 서로 연관된 상수들의 집합입니다.\n비슷한 속성을 지닌 문자열이나 숫자를 묶어서 클래스로 정의하는 것 입니다.\n기본적으로 인덱스가 0부터 자동으로 지정되고,\n이외에도 이름에 의미하는 바를 바로 정의 할 수 있어 코드가 단순해집니다. \nEnum…","html":"<h2 id=\"-java-enum\" style=\"position:relative;\"><a href=\"#-java-enum\" aria-label=\" java enum permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌟 JAVA Enum</h2>\n<h2 id=\"-enum-class이란\" style=\"position:relative;\"><a href=\"#-enum-class%EC%9D%B4%EB%9E%80\" aria-label=\" enum class이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 Enum class이란?</h2>\n<p>Enum 타입은 서로 연관된 상수들의 집합입니다.<br>\n비슷한 속성을 지닌 문자열이나 숫자를 묶어서 클래스로 정의하는 것 입니다.<br>\n기본적으로 인덱스가 0부터 자동으로 지정되고,<br>\n이외에도 이름에 의미하는 바를 바로 정의 할 수 있어 코드가 단순해집니다. <br>\nEnum을 사용하여 새로운 타입을 정의하게 된다는 점을 활용하여 <br>\n컴파일시 실행되는 타입 체크를 통해 안정성또한 챙길 수 있습니다.<br>\n내부에 메소드를 정의할 수 있으며, 각 인스턴스가 가지는 값을 <br>\n여러개 설정할 수 있습니다.(이런건 파라미터에 활용하면 좋습니다.)<br>\n<br></p>\n<p>ex)<br></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//PcType이라는 새로운 타입 정의</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">PcType</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 데이터 삽입시 이 세가지중 하나에 해당하는지 체크함</span>\n    <span class=\"token function\">desktop</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n    <span class=\"token function\">laptop</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"l\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n    <span class=\"token function\">gaming</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"g\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"-enum-class-장점\" style=\"position:relative;\"><a href=\"#-enum-class-%EC%9E%A5%EC%A0%90\" aria-label=\" enum class 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 Enum class 장점</h2>\n<ol>\n<li>인풋 타입 체크<br></li>\n</ol>\n<p>enum내에 지정되어있지 않은 형식의 인풋이 들어오면\n컴파일 에러를 리턴합니다.<br>\n예시로 제 키덕 프로젝트의 회원 타입부분을 들 수 있는데<br>\ntype필드를 이넘클래스로 만들고 Keyduck, Google, Kakao 세가지를 <br>\n인스턴스로 정의한 뒤 입력으로 Naver을 보내면 다음과 같은 에러가 뜹니다.<br>\n<br></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"success\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"code\"</span><span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"msg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"JSON parse error: Cannot deserialize value of type `com.keyduck.member.domain.MemberType` from String \\\"Naver\\\": not one of the values accepted for Enum class: [Keyduck, Google, Kakao]; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `com.keyduck.member.domain.MemberType` from String \\\"Naver\\\": not one of the values accepted for Enum class: [Keyduck, Google, Kakao]\\n at [Source: (PushbackInputStream); line: 4, column: 9] (through reference chain: com.keyduck.member.dto.MemberCreateDto[\\\"type\\\"])\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>타입 안정성 보장\nEnum클래스는 private로 선언되기에 <br>\n다른 패키지나 클래스에서 값을 조작하거나 할당할 수 없습니다. <br>\n이런 점에서 값에 대한 안정성을 보장할 수 있습니다.<br></li>\n</ol>\n<h2 id=\"-enum-class-언제쓰나\" style=\"position:relative;\"><a href=\"#-enum-class-%EC%96%B8%EC%A0%9C%EC%93%B0%EB%82%98\" aria-label=\" enum class 언제쓰나 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 Enum class 언제쓰나?</h2>\n<p>같은 카테고리 안에서 경우의 수가 정해져있고<br>\n인스턴스마다 처리할 동작이 다를때 사용하면 좋을 것 같습니다.<br>\n다음 예시는 <a href=\"https://jojoldu.tistory.com/137\">https://jojoldu.tistory.com/137</a> 에서 <br>\n발췌해와 변형한 예시입니다.<br>\n<br></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">Weather</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">WARM</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"따뜻한날\"</span><span class=\"token punctuation\">,</span>temperature <span class=\"token operator\">-></span> temperature <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">COLD</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"추운날\"</span><span class=\"token punctuation\">,</span>temperature<span class=\"token operator\">-></span> temperature <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> viewName<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Function</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">WCTemperature</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">Weather</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> viewName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Function</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">WCTemperature</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>viewName  <span class=\"token operator\">=</span> viewName<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token namespace\">this<span class=\"token punctuation\">.</span></span>WCTemperature</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">WCTemperature</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token class-name\">WCTemperature</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> weather<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">WCTemperature</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>temperature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WCTemperatureCalculate</span><span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> 체감온도계산<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//given</span>\n        todayTemperature <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//then</span>\n        <span class=\"token class-name\">Integer</span> warmDay <span class=\"token operator\">=</span> <span class=\"token class-name\">Weather<span class=\"token punctuation\">.</span>WARM<span class=\"token punctuation\">.</span>WCTemperature</span><span class=\"token punctuation\">(</span>todayTemperature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Integer</span> coldDay <span class=\"token operator\">=</span> <span class=\"token class-name\">Weather<span class=\"token punctuation\">.</span>COLD<span class=\"token punctuation\">.</span>WCTemperature</span><span class=\"token punctuation\">(</span>todayTemperature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"https://jojoldu.tistory.com/137\">https://jojoldu.tistory.com/137</a>\n<a href=\"https://woowabros.github.io/tools/2017/07/10/java-enum-uses.html\">https://woowabros.github.io/tools/2017/07/10/java-enum-uses.html</a>\n<a href=\"https://velog.io/@ljinsk3/Concept-Enum\">https://velog.io/@ljinsk3/Concept-Enum</a></p>","frontmatter":{"title":"[Java] Enum class 활용하기","date":"June 02, 2021"}}},"pageContext":{"slug":"/Java/2021-06-08-TIL/","previous":{"fields":{"slug":"/Spring/2021-06-01-TIL/"},"frontmatter":{"title":"[Spring] 스프링 MVC 실행과정","category":"Spring","draft":false}},"next":{"fields":{"slug":"/Architecture/2021-06-02-TIL/"},"frontmatter":{"title":"[Architecture] 팩토리 패턴","category":"Architecture","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}