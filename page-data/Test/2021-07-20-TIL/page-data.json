{"componentChunkName":"component---src-templates-blog-post-js","path":"/Test/2021-07-20-TIL/","result":{"data":{"site":{"siteMetadata":{"title":"여름산책","author":"이주형","siteUrl":"https://juhyung990122.github.io","comment":{"disqusShortName":"Guinness990122","utterances":"Juhyung990122/Juhyung990122"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"e89fa12c-285b-5685-8af1-1e05c8a57a61","excerpt":"🌟 Mock 🎯 Mock이란? Mock…","html":"<h2 id=\"-mock\" style=\"position:relative;\"><a href=\"#-mock\" aria-label=\" mock permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌟 Mock</h2>\n<h2 id=\"-mock이란\" style=\"position:relative;\"><a href=\"#-mock%EC%9D%B4%EB%9E%80\" aria-label=\" mock이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 Mock이란?</h2>\n<p>Mock이란 테스트더블의 일종으로 가상객체입니다.\n테스트를 위해서 실제 객체를 만드는 것이 어려울때 주로 사용됩니다.\n해당 객체를 이용하면 환경구성에 들어가는 시간을 아낄 수 있으며\n테스트끼리의 의존성을 낮출 수 있습니다.</p>\n<h3 id=\"-상태-기반-테스트와-행위-기반-테스트\" style=\"position:relative;\"><a href=\"#-%EC%83%81%ED%83%9C-%EA%B8%B0%EB%B0%98-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%99%80-%ED%96%89%EC%9C%84-%EA%B8%B0%EB%B0%98-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\" 상태 기반 테스트와 행위 기반 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 상태 기반 테스트와 행위 기반 테스트</h3>\n<p>상태기반 테스트는 특정한 메소드를 실행시켜\n기대값과의 일치여부로 판단하는 테스트입니다.</p>\n<p>행위기반 테스트는 리턴값과는 코드를 실행시켰을때\n특정한 동작을 했는지에 따라 판단하는 테스트입니다.</p>\n<p>이를테면 A 메소드가 완료상태일때 -> B 메소드 실행 같은 로직이라면\n상태기반테스트에서는 A메소드 실행결과값 + B 메소드 실행결과값으로 성공여부를 판단하게됩니다. 반면 행위기반테스트에서는 B메소드 실행여부를 기준으로 성공여부를 판단합니다.</p>\n<p>근데 아무래도 상태기반 테스트 예시가 좀 이상하죠? 두 메소드가 실행됐다는 사실만으로는 두 메소드간의 연관성을 입증하기가 애매하니까요.\n이런 문제점을 해결하기위해 실제 객체에 쇽샥 붙어서 테스트내에서 특정 객체가 사용되었는지, 혹은 실행되어야하는 메소드가 잘 실행되었는지 확인하는 테스트 스파이 객체를 사용하거나 혹은 앞서 말했던 가상객체 Mock을 사용합니다.\n(대부분의 경우 기본적으로 검증기능을 제공하는 Mock을 사용한다고 합니다.)</p>\n<h3 id=\"mock을-사용할때-유의사항\" style=\"position:relative;\"><a href=\"#mock%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%A0%EB%95%8C-%EC%9C%A0%EC%9D%98%EC%82%AC%ED%95%AD\" aria-label=\"mock을 사용할때 유의사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯Mock을 사용할때 유의사항</h3>","frontmatter":{"title":"[Test] Mock이란?","date":"July 21, 2021"}}},"pageContext":{"slug":"/Test/2021-07-20-TIL/","previous":{"fields":{"slug":"/Test/2021-07-17-TIL/"},"frontmatter":{"title":"[Test] 테스트 커버리지란?","category":"Test","draft":false}},"next":null}},"staticQueryHashes":["3128451518","521680639"]}