{"componentChunkName":"component---src-templates-blog-post-js","path":"/Test/2021-08-06-TIL/","result":{"data":{"site":{"siteMetadata":{"title":"여름산책","author":"이주형","siteUrl":"https://juhyung990122.github.io","comment":{"disqusShortName":"Guinness990122","utterances":"Juhyung990122/Juhyung990122"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"bf549d22-a056-533e-a373-3c6a69e4a8f0","excerpt":"🌟 테스트 작성시 참고점 🎯 본 포스팅은 계속해서 업데이트 됩니다. 테스트를 하면서 느낀점이나 미래의 제가 참고할 점을 정리해 둘 예정입니다.  🎯  공통 설정은 클래스를 따로 관리. 테스트할때 어노테이션이나 기본 중복되는 셋업은 따로 클래스를 파서 관리하고\n이를 상속받아 테스트코드를 작성하는 것이 좋습니다.\n각 테스트마다 일관성이 생길뿐 아니라 코드의 중복또한 막는 효과가 있습니다. 🎯  기본 데이터 적재 필요한 데이터는 @Sql이나 @ApplicationRunner…","html":"<h2 id=\"-테스트-작성시-참고점\" style=\"position:relative;\"><a href=\"#-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%9E%91%EC%84%B1%EC%8B%9C-%EC%B0%B8%EA%B3%A0%EC%A0%90\" aria-label=\" 테스트 작성시 참고점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌟 테스트 작성시 참고점</h2>\n<h2 id=\"-본-포스팅은-계속해서-업데이트-됩니다\" style=\"position:relative;\"><a href=\"#-%EB%B3%B8-%ED%8F%AC%EC%8A%A4%ED%8C%85%EC%9D%80-%EA%B3%84%EC%86%8D%ED%95%B4%EC%84%9C-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%EB%90%A9%EB%8B%88%EB%8B%A4\" aria-label=\" 본 포스팅은 계속해서 업데이트 됩니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 본 포스팅은 계속해서 업데이트 됩니다.</h2>\n<p>테스트를 하면서 느낀점이나 미래의 제가 참고할 점을 정리해 둘 예정입니다. </p>\n<h2 id=\"--공통-설정은-클래스를-따로-관리\" style=\"position:relative;\"><a href=\"#--%EA%B3%B5%ED%86%B5-%EC%84%A4%EC%A0%95%EC%9D%80-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A5%BC-%EB%94%B0%EB%A1%9C-%EA%B4%80%EB%A6%AC\" aria-label=\"  공통 설정은 클래스를 따로 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯  공통 설정은 클래스를 따로 관리.</h2>\n<p>테스트할때 어노테이션이나 기본 중복되는 셋업은 따로 클래스를 파서 관리하고\n이를 상속받아 테스트코드를 작성하는 것이 좋습니다.\n각 테스트마다 일관성이 생길뿐 아니라 코드의 중복또한 막는 효과가 있습니다.</p>\n<h2 id=\"--기본-데이터-적재\" style=\"position:relative;\"><a href=\"#--%EA%B8%B0%EB%B3%B8-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%81%EC%9E%AC\" aria-label=\"  기본 데이터 적재 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯  기본 데이터 적재</h2>\n<p>필요한 데이터는 @Sql이나 @ApplicationRunner 을 이용하여 테스트 구동 전에 준비합니다.\n데이터베이스에 미리 값을 넣어두면 데이터베이스 상태에 의존성이 생겨 오류가 생길 수 있습니다.</p>\n<h2 id=\"-기대값을-json기반으로-관리-이건-확실하진-않음\" style=\"position:relative;\"><a href=\"#-%EA%B8%B0%EB%8C%80%EA%B0%92%EC%9D%84-json%EA%B8%B0%EB%B0%98%EC%9C%BC%EB%A1%9C-%EA%B4%80%EB%A6%AC-%EC%9D%B4%EA%B1%B4-%ED%99%95%EC%8B%A4%ED%95%98%EC%A7%84-%EC%95%8A%EC%9D%8C\" aria-label=\" 기대값을 json기반으로 관리 이건 확실하진 않음 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯 기대값을 JSON기반으로 관리 (이건 확실하진 않음)</h2>\n<p>데이터 구조가 길고 복잡할땐 JSON을 기반으로 테스트하는 것도 좋은 것 같습니다. 복잡하면 객체기반으로 생성하기가 번거롭기때문입니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  //given\n    final String requestBody = readJson(&quot;classpath:member-singup.json&quot;);\n\n    //when\n\t…\n\n    //then\n    resultActions\n        …</code></pre></div>\n<p><a href=\"https://cheese10yun.github.io/spring-guide-test-1/\">https://cheese10yun.github.io/spring-guide-test-1/</a>\n-> 취소.. 현재 키덕 멤버와 키보드를 Json 텍스트로 관리하고 있는데 입력값이 조금이라도 바뀌면 모든 기대값을 다 바꿔줘야하는 단점이 있습니다. 유지보수측면에선 그리 좋은 방법은 아닌듯!</p>","frontmatter":{"title":"[Test] 테스트를 하면서..","date":"August 06, 2021"}}},"pageContext":{"slug":"/Test/2021-08-06-TIL/","previous":{"fields":{"slug":"/Architecture/2021-08-04-TIL/"},"frontmatter":{"title":"[Architecture] 데코레이터 패턴이란?","category":"Architecture","draft":false}},"next":{"fields":{"slug":"/Architecture/2021-08-13-TIL/"},"frontmatter":{"title":"[Architecture] 전략 패턴이란?","category":"Architecture","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}