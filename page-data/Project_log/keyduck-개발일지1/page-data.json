{"componentChunkName":"component---src-templates-blog-post-js","path":"/Project_log/keyduck-개발일지1/","result":{"data":{"site":{"siteMetadata":{"title":"여름산책","author":"이주형","siteUrl":"https://juhyung990122.github.io","comment":{"disqusShortName":"Guinness990122","utterances":"Juhyung990122/Juhyung990122"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"16a26936-9324-51dc-a898-62cc4e26939e","excerpt":"🌟키덕 개발일지 - 1 🎯깃허브 링크 https://github.com/Juhyung990122/Keyduck_back 🎯프로젝트 소개 🎯진행내역 기본환경 세팅 유저단 VO, DTO 설정 회원가입 기능 구현 🎯에러로그 및 메모 security할때는 webconfig에서 보안 일단 다 풀어두어야합니다 DTO는 또하나의 객체, 모델 원본을 안건들기위한 또하나의 객체를 생성한다고 보면 편합니다. 리턴값에서 제외하고싶은 필드는 Jsonproperty에서 접근권한을 WO…","html":"<h2 id=\"키덕-개발일지---1\" style=\"position:relative;\"><a href=\"#%ED%82%A4%EB%8D%95-%EA%B0%9C%EB%B0%9C%EC%9D%BC%EC%A7%80---1\" aria-label=\"키덕 개발일지   1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌟키덕 개발일지 - 1</h2>\n<h3 id=\"깃허브-링크\" style=\"position:relative;\"><a href=\"#%EA%B9%83%ED%97%88%EB%B8%8C-%EB%A7%81%ED%81%AC\" aria-label=\"깃허브 링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯깃허브 링크</h3>\n<p><a href=\"https://github.com/Juhyung990122/Keyduck_back\">https://github.com/Juhyung990122/Keyduck_back</a></p>\n<h3 id=\"프로젝트-소개\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%86%8C%EA%B0%9C\" aria-label=\"프로젝트 소개 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯프로젝트 소개</h3>\n<h3 id=\"진행내역\" style=\"position:relative;\"><a href=\"#%EC%A7%84%ED%96%89%EB%82%B4%EC%97%AD\" aria-label=\"진행내역 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯진행내역</h3>\n<ul>\n<li>기본환경 세팅</li>\n<li>유저단 VO, DTO 설정</li>\n<li>회원가입 기능 구현</li>\n</ul>\n<h3 id=\"에러로그-및-메모\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9F%AC%EB%A1%9C%EA%B7%B8-%EB%B0%8F-%EB%A9%94%EB%AA%A8\" aria-label=\"에러로그 및 메모 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎯에러로그 및 메모</h3>\n<ol>\n<li>\n<p>security할때는 webconfig에서 보안 일단 다 풀어두어야합니다<br></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpSecurity</span> http<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n\thttp\n\t<span class=\"token punctuation\">.</span><span class=\"token function\">csrf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\thttp\n\t<span class=\"token punctuation\">.</span><span class=\"token function\">headers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token function\">frameOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>DTO는 또하나의 객체, 모델 원본을 안건들기위한 또하나의 객체를 생성한다고 보면 편합니다.<br></li>\n<li>\n<p>리턴값에서 제외하고싶은 필드는 Jsonproperty에서 접근권한을 WO로 해두어야합니다.\nJsonIgnore하면 deserializer했을때 데이터가 없습니다ㅎ</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@JsonProperty</span><span class=\"token punctuation\">(</span>access <span class=\"token operator\">=</span> <span class=\"token class-name\">JsonProperty<span class=\"token punctuation\">.</span>Access</span><span class=\"token punctuation\">.</span>WRITE_ONLY<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">private</span> 필드형식 필드이름<span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n</li>\n<li>리턴은 일단 포맷 맞추기전까지 ResponseEntity&#x3C;?>로 통일합니다.</li>\n<li>VO에서는 Setter을 안줬습니다. 일전에 이야기했던 일관성문제나 코드의 가독성을 위해\nbuilder컨셉으로 바꾸었기 때문입니다. 다만 이번 DTO에서는 Setter을 사용했는데\nController에서 @RequestBody로 외부에서 데이터를 받는 경우엔 기본생성자 + set메소드를 통해서만 값이 할당되기때문에 setter을 허용하고 있습니다.</li>\n</ol>\n<p>참고자료 - <a href=\"https://github.com/alalstjr/Java-spring-boot-security-jwt\">https://github.com/alalstjr/Java-spring-boot-security-jwt</a></p>","frontmatter":{"title":"Keyduck 개발일지1","date":"February 28, 2021"}}},"pageContext":{"slug":"/Project_log/keyduck-개발일지1/","previous":{"fields":{"slug":"/Project_log/2021-02-23TIL/"},"frontmatter":{"title":"[Spring] Spring CRUD를 마무리하며","category":"Project_log","draft":false}},"next":{"fields":{"slug":"/Project_log/keyduck개발일지2/"},"frontmatter":{"title":"Keyduck 개발일지2","category":"project_log","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}